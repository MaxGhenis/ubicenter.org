<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="/author/nate/feed.xml" rel="self" type="application/atom+xml" />
  <link href="/" rel="alternate" type="text/html" />
  <updated>2021-04-10T06:19:38+00:00</updated>
  <id>/author/nate/feed.xml</id>

  
  
  

  
    <title type="html">UBI Center | </title>
  

  
    <subtitle>Analyzing universal basic income policies with open-source research</subtitle>
  

  

  
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
      
    
  

  
  

  
    <entry>
      <title type="html">Student debt cancellation is less progressive than universal payments</title>
      <link href="/student-debt" rel="alternate" type="text/html" title="Student debt cancellation is less progressive than universal payments" />
      <published>2020-11-17T00:00:00+00:00</published>
      <updated>2020-11-17T00:00:00+00:00</updated>
      <id>/student-debt</id>
      <content type="html" xml:base="/student-debt">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;Over 40 million Americans possess over $1.5 trillion in student debt. And as new borrowers take out loans faster than old borrowers pay them back, that number is &lt;a href=&quot;https://www.newyorkfed.org/microeconomics/hhdc.html&quot;&gt;increasing with time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This problem has led to Democrats across the ideological spectrum to advocate for student debt relief. In the 2020 primary, Bernie Sanders had the most generous &lt;a href=&quot;https://berniesanders.com/issues/free-college-cancel-debt/&quot;&gt;plan&lt;/a&gt;, calling for the cancellation of all outstanding student debt regardless of a person’s income. Also in the primary, Elizabeth Warren &lt;a href=&quot;https://elizabethwarren.com/plans/affordable-higher-education&quot;&gt;proposed&lt;/a&gt; cancelling up to $50,000 in student debt, phasing out for households with income above $100,000; in September 2020, she and Senate Minority Leader Chuck Schumer &lt;a href=&quot;https://www.politico.com/f/?id=00000174-9b5b-d59c-a174-df5f0b960000&quot;&gt;introduced a resolution&lt;/a&gt; calling on Biden to cancel $50,000 in debt per person through executive order (the resolution didn’t mention phasing out the cancellation with income).   Back in April, President-elect Joe Biden &lt;a href=&quot;https://medium.com/@JoeBiden/joe-biden-outlines-new-steps-to-ease-economic-burden-on-working-people-e3e121037322&quot;&gt;recommended&lt;/a&gt; forgiving a minimum of $10,000 of student debt per person.&lt;/p&gt;

&lt;p&gt;In this paper, I analyze which Americans would benefit the most from student debt cancellation and examine how it compares to budget-equivalent universal payments. I find that, across a range of distributional outcomes, each student debt cancellation plan would be less progressive than a universal payment of the same total cost.&lt;/p&gt;

&lt;h2 id=&quot;who-holds-the-debt&quot;&gt;Who holds the debt?&lt;/h2&gt;

&lt;p&gt;First, a caveat: data on student debt is incomplete. The Federal Reserve’s Survey of Consumer Finances (SCF) is the primary source of wealth microdata, powering inequality statistics, detailed breakdowns of assets and liabilities, and microsimulations like mine. However, it only counts people in a household’s “Primary Economic Unit,” meaning economically independent young adults living with parents are excluded. As a result, the SCF understates total student debt by about a third, compared to aggregate data sources like the &lt;a href=&quot;https://www.federalreserve.gov/releases/g19/current/&quot;&gt;G.19&lt;/a&gt; and &lt;a href=&quot;https://www.newyorkfed.org/medialibrary/interactives/householdcredit/data/pdf/hhdc_2019q4.pdf&quot;&gt;Consumer Credit Panel&lt;/a&gt;. The missing student debt is disproportionately held by &lt;a href=&quot;https://www.peoplespolicyproject.org/2019/06/27/low-income-people-have-more-student-debt-than-realized/&quot;&gt;young people&lt;/a&gt; and people in the &lt;a href=&quot;https://www.brookings.edu/blog/up-front/2019/06/28/who-owes-the-most-student-debt/&quot;&gt;bottom and top income quintiles&lt;/a&gt;. While my colleagues and I aim to refine the data, the SCF is currently the best available source for this sort of analysis, so I use it here while acknowledging its limitations.&lt;/p&gt;

&lt;p&gt;That said, the 2019 SCF reports $1.1 trillion of total student debt,&lt;sup id=&quot;fnref:debt&quot;&gt;&lt;a href=&quot;#fn:debt&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; held by households representing one in four Americans. Some demographics are more likely to hold debt than others:&lt;sup id=&quot;fnref:hhdemo&quot;&gt;&lt;a href=&quot;#fn:hhdemo&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Black Americans are the most likely to have student debt, while Hispanic Americans are the least likely, with 33 percent and 18 percent of people possessing student debt respectively.&lt;/li&gt;
  &lt;li&gt;Young people are more likely to hold student debt than any other age group: 40 percent of people under 35 have student debt compared to just 2 percent of those who are 75 or older.&lt;/li&gt;
  &lt;li&gt;Income quintiles&lt;sup id=&quot;fnref:quintiles&quot;&gt;&lt;a href=&quot;#fn:quintiles&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; follow a bell curve, with the highest amount of debt held by the middle class and smaller amounts held by the lowest and highest quintile.&lt;/li&gt;
  &lt;li&gt;Americans living in poverty&lt;sup id=&quot;fnref:poverty&quot;&gt;&lt;a href=&quot;#fn:poverty&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; are less likely to possess student debt than Americans living above the poverty line.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The chart below (and others like it included in this paper) allow you to compare the results across race, education level, age groups, income quintiles, net worth quintiles, and poverty status.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Import libraries
import pandas as pd
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import microdf as mdf
import plotly.graph_objects as go

race = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/race_debt_ubi%20(1).csv')
education = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/education_debt_ubi.csv')
age = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/age_debt_ubi.csv')
income = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/income_debt_ubi%20(1).csv')
networth = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/networth_debt_ubi%20(1).csv')
poor = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/poor_debt_ubi.csv')
all2 = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/all2.csv')
racial_wealth_gap = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/racial_wealth_gap%20(2)')
scf = pd.read_csv('https://github.com/UBICenter/ed_debt_vs_ubi/raw/main/scf_raw2')

race2 = race.drop([4])
education2 = education.drop([4])
age2 = age.drop([6])
income2 = income.drop([5])
networth2 = networth.drop([5])
poor2 = poor.drop([2])

# Colors from https://material.io/design/color/the-color-system.html
BLUE = '#1976D2'
DARK_BLUE = '#1565C0'
LIGHT_BLUE = '#90CAF9'
GRAY = '#BDBDBD'

colors = [GRAY,] * 5

colors2 = [GRAY,] * 7

colors3 = [GRAY,] * 6

colors4 = [GRAY,] * 3

fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_has_debt'], 
                     text=race2['percent_has_debt'], name='race',
                     showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_has_debt'],
                     text=education2['percent_has_debt'], name='education',
                     visible = False, showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_has_debt'], name='age',
                     text=age2['percent_has_debt'], visible = False,
                     showlegend=False, marker_color=colors2))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_has_debt'],
                     text=income2['percent_has_debt'], name='income', visible = False,
                     showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_has_debt'], y=networth2['percent_has_debt'],
                     name='networth', visible = False, showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_has_debt'],
                     text=poor2['percent_has_debt'], name='poor',
                     visible = False, showlegend=False, marker_color=colors4))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Share of people in households with student debt&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,50])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Population share with student debt by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Population share with student debt by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Population share with student debt by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Population share with student debt by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Population share with student debt by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Population share with student debt by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Population share with student debt by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;The average person holds about $3,700 in student debt, including those who have no debt at all, with demographic trends similar to the share of households holding debt.  As expected, households headed by college graduates possess the most debt, holding 18 times the amount of debt for those headed by people without a high school diploma (whose student debt is ostensibly held by a spouse or child).  Those at the bottom of the net worth distribution have more student debt than those at the top. This too is unsurprising as younger people hold a disproportionate amount of debt and the student debt itself decreases one’s net worth.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Average debt by demographic

fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['mean_debt'], 
                     text=race2['mean_debt'], name='race',
                     showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['mean_debt'],
                     text=education2['mean_debt'], name='education',
                     visible = False, showlegend=False, marker_color=colors))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['mean_debt'], name='age',
                     text=age2['mean_debt'], visible = False,
                     showlegend=False, marker_color=colors2))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['mean_debt'],
                     text=income2['mean_debt'], name='income', visible = False,
                     showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['mean_debt'], y=networth2['mean_debt'],
                     name='networth', visible = False, showlegend=False, marker_color=colors3))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['mean_debt'],
                     text=poor2['mean_debt'], name='poor',
                     visible = False, showlegend=False, marker_color=colors4))


fig.update_layout(uniformtext_minsize=11, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average student debt per person&quot;,
        tickprefix =&quot;$&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,12_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Average student debt by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Average student debt by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Average student debt by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Average student debt by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Average student debt by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Average student debt by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Average student debt by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;comparing-50000-debt-cancellation-to-a-budget-equivalent-universal-payment&quot;&gt;Comparing $50,000 debt cancellation to a budget-equivalent universal payment&lt;/h2&gt;

&lt;p&gt;According to the 2019 SCF, the Warren-Schumer proposal to cancel $50,000 in student debt would cost approximately $700 billion, or about $2,300 for every adult and child. What if that $2,300 was given directly as a universal payment?&lt;/p&gt;

&lt;p&gt;On average, groups that would receive more money from student debt cancellation include the top two income quintiles, Black Americans, college graduates, and people not in poverty; other groups would receive more from the universal payment.&lt;/p&gt;

&lt;h3 id=&quot;average-benefit-per-policy&quot;&gt;Average benefit per policy&lt;/h3&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Average Benefit by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_change_50,
    text=race2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))


fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_change_50,
    text= race2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))


fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_change_50,
    text=education2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_change_50,
    text=education2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_change_50,
    text=age2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_change_50,
    text=age2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_change_50,
    text=income2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_change_50,
    text=income2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_change_50,
    text=networth2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_change_50,
    text=networth2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_change_50,
    text=poor2.ed_debt_change_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_change_50,
    text=poor2.ubi_change_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=8, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average benefit per person&quot;,
        ticksuffix =&quot;&quot;,
        tickprefix =&quot;$&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,12_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Average benefit by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Average benefit of reform by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Average benefit of reform by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Average benefit of reform by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])


fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;share-better-off-in-each-policy&quot;&gt;Share better off in each policy&lt;/h3&gt;

&lt;p&gt;While Black Americans on the whole receive more under student debt cancellation, 74 percent of Black Americans would be better off with the universal payment.  For those at the bottom quintile of the net worth distribution, 65 percent would receive more money with the universal payment.  88 percent of people living in poverty would receive a larger benefit with the universal payment.  In total, 82 percent of Americans would be better off with a budget-equivalent universal payment compared to $50,000 in student debt cancellation.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button4&quot; onclick=&quot;f4()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_4&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent better off with universal payment ##
fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_better_off_with_ubi_50'], 
                     text=race2['percent_better_off_with_ubi_50'], name='race',
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_better_off_with_ubi_50'],
                     text=education2['percent_better_off_with_ubi_50'], name='education',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_better_off_with_ubi_50'], name='age',
                     text=age2['percent_better_off_with_ubi_50'], visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_better_off_with_ubi_50'],
                     text=income2['percent_better_off_with_ubi_50'], name='income', visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_better_off_with_ubi_50'], y=networth2['percent_better_off_with_ubi_50'],
                     name='networth', visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_better_off_with_ubi_50'],
                     text=poor2['percent_better_off_with_ubi_50'], name='poor',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Percent better off with universal payment&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,110])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Percent better off with universal payments by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Share better off with universal payment by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Share better off with universal payment by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Share better off with universal payment by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Share better off with universal payment by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Share better off with universal payment by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Share better off with universal payment by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])


fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f4() {
  var x = document.getElementById(&quot;asset_code_4&quot;);
  var b = document.getElementById(&quot;button4&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset4&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-4.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset4&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;reduction-in-net-debt-rates&quot;&gt;Reduction in net debt rates&lt;/h3&gt;

&lt;p&gt;Cancelling $50,000 in student debt would lift more Americans out of total debt (negative net worth) than a budget-equivalent universal payment.&lt;sup id=&quot;fnref:static&quot;&gt;&lt;a href=&quot;#fn:static&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; In total, the student debt cancellation would reduce the number of Americans in debt by 44 percent while the universal payment plan would reduce it by 30 percent. This overall trend is mostly consistent across demographic groups. Exceptions include Hispanics, people with no education beyond high school, people at the bottom quintile of the income distribution, and those living in poverty.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button5&quot; onclick=&quot;f5()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_5&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent decrease of people in debt by reform ##

fig = go.Figure()


fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_debt_reduction_50,
    text=race2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_debt_reduction_50,
    text= race2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_debt_reduction_50,
    text=education2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_debt_reduction_50,
    text=education2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_debt_reduction_50,
    text=age2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_debt_reduction_50,
    text=age2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_debt_reduction_50,
    text=income2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_debt_reduction_50,
    text=income2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_debt_reduction_50,
    text=networth2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_debt_reduction_50,
    text=networth2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_debt_reduction_50,
    text=poor2.ed_debt_debt_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_debt_reduction_50,
    text=poor2.ubi_debt_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Percent decrease of people in debt&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-60,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Percent decrease of people in debt by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Percent decrease of people in debt by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Percent decrease of people in debt by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Percent decrease of people in debt by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f5() {
  var x = document.getElementById(&quot;asset_code_5&quot;);
  var b = document.getElementById(&quot;button5&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset5&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-5.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset5&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;racial-wealth-gaps&quot;&gt;Racial wealth gaps&lt;/h3&gt;

&lt;p&gt;While much of the rhetoric surrounding student debt relief has been &lt;a href=&quot;https://www.businessinsider.com/how-eliminating-student-debt-would-close-the-racial-wealth-gap-2019-6&quot;&gt;centered&lt;/a&gt; around the racial wealth gap, a budget-equivalent universal payment would be stronger at reducing the median gap for both Black and Hispanics Americans. Considering the mean racial wealth gaps, universal payments also reduce the White/Hispanic gap more, though student debt cancellation reduces the White/Black gap more.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button6&quot; onclick=&quot;f6()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_6&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
racial_wealth_gap = (racial_wealth_gap).round(1)

fig = go.Figure()

groups = ['Hispanic mean', 'Hispanic median', 'Black mean', 'Black median']

status_quo_ratio = [racial_wealth_gap.ratios[1],
                   racial_wealth_gap.ratios[0],
                   racial_wealth_gap.ratios[2],
                   racial_wealth_gap.ratios[3],]

ubi_ratio = [racial_wealth_gap.ratios[5],
            racial_wealth_gap.ratios[4],
            racial_wealth_gap.ratios[6],
            racial_wealth_gap.ratios[7],]

ed_debt_ratio = [racial_wealth_gap.ratios[9],
                racial_wealth_gap.ratios[8],
                racial_wealth_gap.ratios[10],
                racial_wealth_gap.ratios[11],]


fig = go.Figure(data=[
    go.Bar(name='Status quo', x=groups, y=status_quo_ratio, 
                                    marker_color=GRAY,
          text=status_quo_ratio),
    
        
    go.Bar(name='$50k student&lt;br /&gt;debt cancellation', x=groups, y=ed_debt_ratio,
                                      marker_color=LIGHT_BLUE,
                                      text=ed_debt_ratio),
    
    go.Bar(name='Budget-equiavalent&lt;br /&gt;universal payment', x=groups, y=ubi_ratio, 
                                    marker_color=DARK_BLUE,
          text=ubi_ratio),
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}', textposition='outside')
fig.update_layout(title_text='Racial wealth gap by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Ratio of white wealth statistic to demographic&quot;,
        ticksuffix =&quot;&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,10])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f6() {
  var x = document.getElementById(&quot;asset_code_6&quot;);
  var b = document.getElementById(&quot;button6&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset6&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-6.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset6&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;inequality-impacts&quot;&gt;Inequality impacts&lt;/h3&gt;

&lt;p&gt;For income inequality (and poverty), I follow &lt;a href=&quot;https://finaid.org/loans/forgivenesstaxability&quot;&gt;IRS guidelines&lt;/a&gt; in treating student loan forgiveness as income, though I do not estimate its tax liability. I calculate inequality using the Gini index, which goes from zero (perfect equality) to one (one person holds all the income/wealth). Student debt forgiveness reduces wealth inequality slightly more than a budget equivalent-universal payment; however, universal payments reduce income inequality more.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button7&quot; onclick=&quot;f7()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_7&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Gini chart

# Calculate the change in gini index for income of each reform
start_gini = mdf.gini(scf, 'income_pp', w='wgt_numper').round(3)
ubi_gini = mdf.gini(scf, 'ubi_income_pp', w='wgt_numper').round(3)
ed_gini = mdf.gini(scf, 'no_debt_income_pp', w='wgt_numper').round(3)
ubi_gini_50 = mdf.gini(scf, 'ubi_income_pp_50', w='wgt_numper').round(3)
ubi_gini_50_phase_out = mdf.gini(scf, 'ubi_income_pp_50_phase_out', w='wgt_numper').round(3)
ubi_gini_10 = mdf.gini(scf, 'ubi_income_pp_10', w='wgt_numper').round(3)
ed_gini_10 = mdf.gini(scf, 'no_debt_income_pp_10', w='wgt_numper').round(3)
ed_gini_50 = mdf.gini(scf, 'no_debt_income_pp_50', w='wgt_numper').round(3)
ed_gini_50_phase_out = mdf.gini(scf, 'no_debt_income_pp_50_phase_out', w='wgt_numper').round(3)

change_ubi_gini = (((ubi_gini - start_gini) / start_gini) * 100).round(1)
change_ubi_gini_50 = (((ubi_gini_50 - start_gini) / start_gini) * 100).round(1)
change_ubi_gini_50_phase_out = (((ubi_gini_50_phase_out - start_gini) / start_gini) * 100).round(1)
change_ubi_gini_10 = (((ubi_gini_10 - start_gini) / start_gini) * 100).round(1)

change_ed_gini = (((ed_gini - start_gini) / start_gini) * 100).round(1)
change_ed_gini_50 = (((ed_gini_50 - start_gini) / start_gini) * 100).round(1)
change_ed_gini_50_phase_out = (((ed_gini_50_phase_out - start_gini) / start_gini) * 100).round(1)
change_ed_gini_10 = (((ed_gini_10 - start_gini) / start_gini) * 100).round(1)

# Calculate the change in gini index for networth of each reform
start_gini_networth = mdf.gini(scf, 'networth_pp', w='wgt_numper').round(3)
ubi_gini_networth = mdf.gini(scf, 'ubi_networth_pp', w='wgt_numper').round(3)
ed_gini_networth = mdf.gini(scf, 'no_debt_networth_pp', w='wgt_numper').round(3)
ubi_gini_50_networth = mdf.gini(scf, 'ubi_networth_pp_50', w='wgt_numper').round(3)
ubi_gini_50_phase_out_networth = mdf.gini(scf, 'ubi_networth_pp_50_phase_out', w='wgt_numper').round(3)
ubi_gini_10_networth = mdf.gini(scf, 'ubi_networth_pp_10', w='wgt_numper').round(3)
ed_gini_10_networth = mdf.gini(scf, 'no_debt_networth_pp_10', w='wgt_numper').round(3)
ed_gini_50_networth = mdf.gini(scf, 'no_debt_networth_pp_50', w='wgt_numper').round(3)
ed_gini_50_phase_out_networth = mdf.gini(scf, 'no_debt_networth_pp_50_phase_out', w='wgt_numper').round(3)

change_ubi_gini_networth = (((ubi_gini_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ubi_gini_50_networth = (((ubi_gini_50_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ubi_gini_50_phase_out_networth = (((ubi_gini_50_phase_out_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ubi_gini_10_networth = (((ubi_gini_10_networth - start_gini_networth) / start_gini_networth) * 100).round(2)

change_ed_gini_networth = (((ed_gini_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ed_gini_50_networth = (((ed_gini_50_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ed_gini_50_phase_out_networth = (((ed_gini_50_phase_out_networth - start_gini_networth) / start_gini_networth) * 100).round(2)
change_ed_gini_10_networth = (((ed_gini_10_networth - start_gini_networth) / start_gini_networth) * 100).round(2)

racial_wealth_gap = (racial_wealth_gap).round(1)

fig = go.Figure()

metric = ['Wealth', 'Income']

status_quo_gini = [start_gini_networth,
               start_gini]

ubi_gini = [ubi_gini_50_networth,
           ubi_gini_50]

ed_debt_gini = [ed_gini_50_networth,
               ed_gini_50]



fig = go.Figure(data=[
    go.Bar(name='Status quo', x=metric, y=status_quo_gini, 
                                    marker_color=GRAY,
          text=status_quo_gini),
    
        
    go.Bar(name='$50k student&lt;br /&gt;debt cancellation', x=metric, y=ed_debt_gini,
                                      marker_color=LIGHT_BLUE,
                                      text=ed_debt_gini),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=metric, y=ubi_gini, 
                                    marker_color=DARK_BLUE,
          text=ubi_gini)

])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}', textposition='outside')
fig.update_layout(title_text='Inequality by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Gini index&quot;,
        ticksuffix =&quot;&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,1])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')
config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f7() {
  var x = document.getElementById(&quot;asset_code_7&quot;);
  var b = document.getElementById(&quot;button7&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset7&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-7.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset7&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;poverty-impacts&quot;&gt;Poverty impacts&lt;/h3&gt;

&lt;p&gt;Across every demographic and metric, universal payments would cut poverty rates at a higher rate than student debt cancellation. Overall, universal payments would cut poverty by 52 percent, while cancelling $50,000 in student debt would cut poverty by 14 percent. Hispanic and Black poverty would fall 63 percent and 47 percent under universal payments, respectively, but only 7 percent and 11 percent under student debt cancellation. Student debt cancellation would cut poverty for people in households headed by people without a high school diploma by 1 percent, while universal payments would cut it by 46 percent. Universal payments would even eliminate poverty for Americans in the second income quintile.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button8&quot; onclick=&quot;f8()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_8&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent reduction in poverty rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_poverty_reduction_50	,
    text=race2.ed_debt_poverty_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_poverty_reduction_50,
    text= race2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_poverty_reduction_50	,
    text=education2.ed_debt_poverty_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_poverty_reduction_50,
    text=education2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_poverty_reduction_50	,
    text=age2.ed_debt_poverty_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_poverty_reduction_50,
    text=age2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_poverty_reduction_50,
    text=income2.ed_debt_poverty_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_poverty_reduction_50,
    text=income2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_poverty_reduction_50,
    text=networth2.ed_debt_poverty_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_poverty_reduction_50,
    text=networth2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_poverty_reduction_50,
    text=poor2.ed_debt_poverty_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_poverty_reduction_50,
    text=poor2.ubi_poverty_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty reduction&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-105,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Poverty reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by age group',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])
config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f8() {
  var x = document.getElementById(&quot;asset_code_8&quot;);
  var b = document.getElementById(&quot;button8&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset8&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-8.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset8&quot;&gt;&lt;/div&gt;

&lt;p&gt;Universal payments also outperform student debt cancellation across all demographics on poverty gap reduction.  The poverty gap is defined as the sum of the gaps between a household’s resources and its poverty threshold across all households in poverty. The poverty gap would fall 69 percent under universal payments and 15 percent under student debt cancellation.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button9&quot; onclick=&quot;f9()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_9&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent in poverty by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_gap_reduction_50	,
    text=race2.ed_debt_gap_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_gap_reduction_50,
    text= race2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_gap_reduction_50	,
    text=education2.ed_debt_gap_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_gap_reduction_50,
    text=education2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_gap_reduction_50,
    text=age2.ed_debt_gap_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_gap_reduction_50,
    text=age2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_gap_reduction_50,
    text=income2.ed_debt_gap_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_gap_reduction_50,
    text=income2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_gap_reduction_50,
    text=networth2.ed_debt_gap_reduction_50,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_gap_reduction_50,
    text=networth2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_gap_reduction_50	,
    text=poor2.ed_debt_gap_reduction_50	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_gap_reduction_50,
    text=poor2.ubi_gap_reduction_50,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty gap reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Poverty gap reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty gap reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty gap reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Percent reduction in poverty gap by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f9() {
  var x = document.getElementById(&quot;asset_code_9&quot;);
  var b = document.getElementById(&quot;button9&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset9&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-9.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset9&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;comparing-other-student-debt-proposals&quot;&gt;Comparing other student debt proposals&lt;/h2&gt;

&lt;p&gt;While this paper focuses on comparing the $50,000 forgiveness currently proposed by Senators Warren and Schumer, I found similar results comparing other proposals. Whether comparing full forgiveness to a budget-equivalent universal payment of $3,650, or Warren’s phased-out $50,000 forgiveness to $2,100 payments, or $10,000 forgiveness to $770 payments, universal payments benefit a larger share of Americans and reduce poverty and income inequality by a larger amount, while student debt cancellation reduces wealth inequality more.&lt;/p&gt;

&lt;p&gt;The charts below show how all four plans would impact each metric; for more charts on each plan, see the Appendix.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button10&quot; onclick=&quot;f10()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_10&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
comparison = race[race['race'] == 'All']

fig = go.Figure()

reform = ['All', '$50k', '$50k phase-out', '$10k']

ubi_all = [comparison.ubi_poverty_reduction[4],
           comparison.ubi_poverty_reduction_50[4],
           all2.ubi_poverty_reduction_50_phase_out[0],
           comparison.ubi_poverty_reduction_10[4]]

ed_debt_all = [comparison.ed_debt_poverty_reduction[4], 
            comparison.ed_debt_poverty_reduction_50[4],
               all2.ed_debt_poverty_reduction_50_phase_out[0],
            comparison.ed_debt_poverty_reduction_10[4]]



fig = go.Figure(data=[
    
    go.Bar(name='Student&lt;br /&gt;debt cancellation', x=reform, y=ed_debt_all,
                                      marker_color=LIGHT_BLUE,
          text=ed_debt_all),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all, 
                                    marker_color=DARK_BLUE,
          text=ubi_all)
    
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Poverty reduction by reform')


fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Change to poverty rate&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f10() {
  var x = document.getElementById(&quot;asset_code_10&quot;);
  var b = document.getElementById(&quot;button10&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset10&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-10.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset10&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button11&quot; onclick=&quot;f11()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_11&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# gini_networth chart
fig = go.Figure()

ubi_all_gini_networth = [change_ubi_gini_networth,
           change_ubi_gini_50_networth,
           change_ubi_gini_50_phase_out_networth,
               change_ubi_gini_10_networth]

ed_debt_all_gini_networth = [change_ed_gini_networth,
           change_ed_gini_50_networth,
           change_ed_gini_50_phase_out_networth,
               change_ed_gini_10_networth]



fig = go.Figure(data=[
    go.Bar(name='Student&lt;br /&gt;debt cancellation', x=reform,
           y=ed_debt_all_gini_networth,
           marker_color=LIGHT_BLUE,
           text=ed_debt_all_gini_networth),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all_gini_networth, 
                                    marker_color=DARK_BLUE,
          text=ubi_all_gini_networth)
    

])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Wealth inequality by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Change in Gini index of per-capita wealth&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-2,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')
fconfig = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f11() {
  var x = document.getElementById(&quot;asset_code_11&quot;);
  var b = document.getElementById(&quot;button11&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset11&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-11.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset11&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button12&quot; onclick=&quot;f12()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_12&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Gini chart
fig = go.Figure()

ubi_all_gini = [change_ubi_gini,
           change_ubi_gini_50,
           change_ubi_gini_50_phase_out,
               change_ubi_gini_10]

ed_debt_all_gini = [change_ed_gini,
           change_ed_gini_50,
           change_ed_gini_50_phase_out,
               change_ed_gini_10]



fig = go.Figure(data=[
    
    go.Bar(name='Student&lt;br /&gt;debt cancellation', x=reform, y=ed_debt_all_gini,
                                      marker_color=LIGHT_BLUE,
          text=ed_debt_all_gini),
    
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all_gini, 
                                    marker_color=DARK_BLUE,
          text=ubi_all_gini),
    
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Income inequality by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Change in Gini index of per-capita income&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-10,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')
config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f12() {
  var x = document.getElementById(&quot;asset_code_12&quot;);
  var b = document.getElementById(&quot;button12&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset12&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-12.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset12&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button13&quot; onclick=&quot;f13()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_13&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = go.Figure()

ubi_all = [comparison.percent_better_off_with_ubi[4],
           comparison.percent_better_off_with_ubi_50[4],
           all2.percent_better_off_with_ubi_50_phase_out[0],
           comparison.percent_better_off_with_ubi_10[4]]



fig = go.Figure(data=[
    go.Bar(name='Budget-equivalent&lt;br /&gt;universal payment', x=reform, y=ubi_all, 
                                    marker_color=DARK_BLUE,
          text=ubi_all)
    
])

fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Share better off with universal payments than student debt cancellation by reform')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Cancellation amount&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Share of people better off with universal payments&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,100])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f13() {
  var x = document.getElementById(&quot;asset_code_13&quot;);
  var b = document.getElementById(&quot;button13&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset13&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-13.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset13&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Because the majority of Americans do not have student debt, the majority of Americans will not benefit from student debt cancellation, no matter the size of the proposal.  Student debt cancellation primarily benefits high income earners with a college degree, a demographic &lt;a href=&quot;https://fordhaminstitute.org/national/research/what-you-make-depends-on-where-you-live&quot;&gt;likely to see incomes rise over time&lt;/a&gt;, while leaving out some of the poorest Americans. Still, Senator Warren and other proponents correctly identify it as a way to &lt;a href=&quot;https://rooseveltinstitute.org/wp-content/uploads/2020/08/RI_StudentDebtForgiveness_WorkingPaper_202008.pdf&quot;&gt;cut inequality and the racial wealth gap&lt;/a&gt;. Student debt has reached enormous levels, making its cancellation a major program that would benefit tens of millions, and among degree holders, it would disproportionately benefit those from less-advantaged backgrounds.&lt;/p&gt;

&lt;p&gt;But the enormity of the endeavor justifies careful comparison to other policies. While student debt cancellation reduces wealth inequality more than universal payments, it mostly underperforms simply sending every American a check on reducing racial wealth gaps. On all other outcomes, it fares even worse: universal payments would reduce poverty and income inequality more than student debt cancellation, regardless of the particular policy design. This analysis may even understate the relative progressivity of universal payments, given it doesn’t capitalize the higher future incomes associated with college education (though limitations of the SCF data may counter that).&lt;/p&gt;

&lt;p&gt;Means-testing the student debt cancellation closes some of the gap, but introduces its own challenges. Warren’s proposal is effectively a retroactive additional marginal tax of 33 percent on student debtors’ earnings between $100,000 and $250,000. This would make this group some of the most highly taxed in the country, with total marginal tax rates likely exceeding 70 percent after considering state and federal income and payroll taxes (only &lt;a href=&quot;https://aspe.hhs.gov/system/files/aspe-files/260661/brief2-overviewmtranalyses.pdf&quot;&gt;low-income benefit recipients&lt;/a&gt; would face higher marginal taxes). Retroactive taxation may be &lt;a href=&quot;https://fas.org/sgp/crs/misc/R42791.pdf&quot;&gt;constitutional&lt;/a&gt;, but it arguably &lt;a href=&quot;https://www.cost.org/globalassets/cost/state-tax-resources-pdf-pages/cost-studies-articles-reports/law360-oped-on-retroactive-taxation-003.pdf&quot;&gt;threatens rule of law&lt;/a&gt;; people value knowing the payoff to their labor when making decisions about it.&lt;/p&gt;

&lt;p&gt;Universal payments have less quantifiable advantages, as well. A one-time debt cancellation excludes both people who recently paid off their student loans, and those about to incur it; universal payments reach all. By favoring college graduates over non-college graduates, student debt cancellation threatens to exacerbate political tensions between these demographics that &lt;a href=&quot;https://www.brookings.edu/research/2020-exit-polls-show-a-scrambling-of-democrats-and-republicans-traditional-bases/&quot;&gt;only rose in the 2020 election&lt;/a&gt;. If young people expect future rounds of student debt cancellation, they may also choose to take on more debt, which could in turn &lt;a href=&quot;http://taylornadauld.com/research/published_papers/Credit%20Supply%20and%20the%20Rise%20in%20College%20Tuition.pdf&quot;&gt;raise the cost of higher education&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While student debt cancellation makes progress toward egalitarian goals (and may have the advantage of &lt;a href=&quot;https://www.warren.senate.gov/imo/media/doc/Ltr%20to%20Warren%20re%20admin%20debt%20cancellation.pdf?fbclid=IwAR3x7goUzVOpD7vcp7XhPYPlYQPmzv7rTzfNIvwl9Y8claLM0p7fo017N-g&quot;&gt;skipping congressional approval&lt;/a&gt;), dollar-for-dollar, those goals are better achieved through universal payments.&lt;/p&gt;

&lt;h2 id=&quot;appendix&quot;&gt;Appendix&lt;/h2&gt;

&lt;h3 id=&quot;10k-relief&quot;&gt;$10k relief&lt;/h3&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button14&quot; onclick=&quot;f14()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_14&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Average Benefit by reform ##

fig = go.Figure()


fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_change_10,
    text=race2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_change_10,
    text= race2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))


fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_change_10,
    text=education2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_change_10,
    text=education2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_change_10,
    text=age2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_change_10,
    text=age2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_change_10,
    text=income2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_change_10,
    text=income2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_change_10,
    text=networth2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_change_10,
    text=networth2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_change_10,
    text=poor2.ed_debt_change_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_change_10,
    text=poor2.ubi_change_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=9, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average benefit&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,2_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Average benefit by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Average benefit of reform by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Average benefit of reform by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Average benefit of reform by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f14() {
  var x = document.getElementById(&quot;asset_code_14&quot;);
  var b = document.getElementById(&quot;button14&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset14&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-14.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset14&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button15&quot; onclick=&quot;f15()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_15&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent better off with ed debt ##
fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_better_off_with_ubi_10'], 
                     text=race2['percent_better_off_with_ubi_10'], name='race',
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_better_off_with_ubi_10'],
                     text=education2['percent_better_off_with_ubi_10'], name='education',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_better_off_with_ubi_10'], name='age',
                     text=age2['percent_better_off_with_ubi_10'], visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_better_off_with_ubi_10'],
                     text=income2['percent_better_off_with_ubi_10'], name='income', visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_better_off_with_ubi_10'], y=networth2['percent_better_off_with_ubi_10'],
                     name='networth', visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_better_off_with_ubi_10'],
                     text=poor2['percent_better_off_with_ubi_10'], name='poor',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Share better off with universal payments&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,100])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Share better off with universal payment by race')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Share better off with universal payment by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Share better off with universal payment by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Share better off with universal payment by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Share better off with universal payment by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Share better off with universal payment by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Share better off with universal payment by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f15() {
  var x = document.getElementById(&quot;asset_code_15&quot;);
  var b = document.getElementById(&quot;button15&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset15&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-15.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset15&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button16&quot; onclick=&quot;f16()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_16&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent decrease of people in debt by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_debt_reduction_10,
    text=race2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_debt_reduction_10,
    text= race2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))


fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_debt_reduction_10,
    text=education2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_debt_reduction_10,
    text=education2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_debt_reduction_10,
    text=age2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_debt_reduction_10,
    text=age2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_debt_reduction_10,
    text=income2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_debt_reduction_10,
    text=income2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_debt_reduction_10,
    text=networth2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_debt_reduction_10,
    text=networth2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_debt_reduction_10,
    text=poor2.ubi_debt_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_debt_reduction_10,
    text=poor2.ed_debt_debt_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')


fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Net debt rate reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-40,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Net debt rate reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Net debt rate reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Net debt rate reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Net debt rate reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Net debt rate reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Net debt rate reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Net debt rate reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f16() {
  var x = document.getElementById(&quot;asset_code_16&quot;);
  var b = document.getElementById(&quot;button16&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset16&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-16.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset16&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button17&quot; onclick=&quot;f17()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_17&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent reduction in poverty rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_poverty_reduction_10	,
    text=race2.ed_debt_poverty_reduction_10	,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_poverty_reduction_10,
    text= race2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_poverty_reduction_10	,
    text=education2.ed_debt_poverty_reduction_10	,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_poverty_reduction_10,
    text=education2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_poverty_reduction_10	,
    text=age2.ed_debt_poverty_reduction_10	,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_poverty_reduction_10,
    text=age2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_poverty_reduction_10,
    text=income2.ed_debt_poverty_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_poverty_reduction_10,
    text=income2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_poverty_reduction_10,
    text=networth2.ed_debt_poverty_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_poverty_reduction_10,
    text=networth2.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor.original_poor,
    y=poor.ed_debt_poverty_reduction_10,
    text=poor.ed_debt_poverty_reduction_10,
    name='$10k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor.original_poor,
    y=poor.ubi_poverty_reduction_10,
    text=poor.ubi_poverty_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty reduction&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-55,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_layout(title_text='Poverty reduction by race')

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by age group',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f17() {
  var x = document.getElementById(&quot;asset_code_17&quot;);
  var b = document.getElementById(&quot;button17&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset17&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-17.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset17&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button18&quot; onclick=&quot;f18()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_18&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent in poverty by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_gap_reduction_10	,
    text=race2.ed_debt_gap_reduction_10	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_gap_reduction_10,
    text= race2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_gap_reduction_10	,
    text=education2.ed_debt_gap_reduction_10	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_gap_reduction_10,
    text=education2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_gap_reduction_10,
    text=age2.ed_debt_gap_reduction_10,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_gap_reduction_10,
    text=age2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_gap_reduction_10,
    text=income2.ed_debt_gap_reduction_10,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_gap_reduction_10,
    text=income2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_gap_reduction_10,
    text=networth2.ed_debt_gap_reduction_10,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_gap_reduction_10,
    text=networth2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_gap_reduction_10	,
    text=poor2.ed_debt_gap_reduction_10	,
    name='$50k student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_gap_reduction_10,
    text=poor2.ubi_gap_reduction_10,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Poverty gap reduction by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty gap reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reductionp by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty gap reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty gap reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty gap reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f18() {
  var x = document.getElementById(&quot;asset_code_18&quot;);
  var b = document.getElementById(&quot;button18&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset18&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-18.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset18&quot;&gt;&lt;/div&gt;

&lt;h3 id=&quot;all-relief&quot;&gt;All relief&lt;/h3&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button19&quot; onclick=&quot;f19()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_19&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Average Benefit by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_change,
    text=race2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_change,
    text= race2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_change,
    text=education2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_change,
    text=education2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_change,
    text=age2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_change,
    text=age2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_change,
    text=income2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_change,
    text=income2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_change,
    text=networth2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_change,
    text=networth2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_change,
    text=poor2.ubi_change,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_change,
    text=poor2.ed_debt_change,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=9, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='$%{text}', textposition='outside')
fig.update_layout(title_text='Average benefit by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Average benefit&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,12_000])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Average benefit of reform by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Average benefit of reform by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Average benefit of reform by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Average benefit of reform by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

config = {'displayModeBar': False}

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f19() {
  var x = document.getElementById(&quot;asset_code_19&quot;);
  var b = document.getElementById(&quot;button19&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset19&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-19.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset19&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button20&quot; onclick=&quot;f20()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_20&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent better off with ed debt ##
fig = go.Figure()

fig.add_trace(go.Bar(x=race2['race'], y=race2['percent_better_off_with_ubi'], 
                     text=race2['percent_better_off_with_ubi'], name='race',
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=education2['edcl'], y=education2['percent_better_off_with_ubi'],
                     text=education2['percent_better_off_with_ubi'], name='education',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=age2['agecl'], y=age2['percent_better_off_with_ubi'], name='age',
                     text=age2['percent_better_off_with_ubi'], visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=income2['income_pp_quintile'], y=income2['percent_better_off_with_ubi'],
                     text=income2['percent_better_off_with_ubi'], name='income', visible = False,
                     showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=networth2['networth_pp_quintile2'],
                     text=networth2['percent_better_off_with_ubi'], y=networth2['percent_better_off_with_ubi'],
                     name='networth', visible = False, showlegend=False, marker_color=DARK_BLUE))

fig.add_trace(go.Bar(x=poor2['original_poor'], y=poor2['percent_better_off_with_ubi'],
                     text=poor2['percent_better_off_with_ubi'], name='poor',
                     visible = False, showlegend=False, marker_color=DARK_BLUE))


fig.update_layout(uniformtext_minsize=13, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Percent better off with universal payment')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Percent better off with universal payment&quot;,
        ticksuffix =&quot;%&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[0,100])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,False,False,False,False,False]},
                       {'title':'Share better off with universal payments by race',
                        'showlegend':True}]),
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,True,False, False,False, False]},
                       {'title':'Share better off with universal payments by education level',
                        'showlegend':True}]),
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,True, False, False, False]},
                       {'title':'Share better off with universal payments by age',
                        'showlegend':True}]),
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, True, False, False]},
                       {'title':'Share better off with universal payments by income quintile',
                        'showlegend':True}]),
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, True, False]},
                       {'title':'Share better off with universal payments by net worth quintile',
                        'showlegend':True}]),
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False, False, False, True]},
                       {'title':'Share better off with universal payments by poverty status',
                        'showlegend':True}]), 
            ]),
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f20() {
  var x = document.getElementById(&quot;asset_code_20&quot;);
  var b = document.getElementById(&quot;button20&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset20&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-20.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset20&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button21&quot; onclick=&quot;f21()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_21&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Reduction in net debt rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_debt_reduction,
    text=race2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_debt_reduction,
    text= race2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_debt_reduction,
    text=education2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_debt_reduction,
    text=education2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_debt_reduction,
    text=age2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_debt_reduction,
    text=age2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_debt_reduction,
    text=income2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_debt_reduction,
    text=income2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_debt_reduction,
    text=networth2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_debt_reduction,
    text=networth2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_debt_reduction,
    text=poor2.ed_debt_debt_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_debt_reduction,
    text=poor2.ubi_debt_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Reduction in net debt rate by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Reduction in net debt rate&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Reduction in net debt rate by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Reduction in net debt rate by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Reduction in net debt rate by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Reduction in net debt rate by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Reduction in net debt rate by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Reduction in net debt rate by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f21() {
  var x = document.getElementById(&quot;asset_code_21&quot;);
  var b = document.getElementById(&quot;button21&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset21&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-21.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset21&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button22&quot; onclick=&quot;f22()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_22&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent reduction in poverty rate by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_poverty_reduction	,
    text=race2.ed_debt_poverty_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_poverty_reduction,
    text= race2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_poverty_reduction	,
    text=education2.ed_debt_poverty_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_poverty_reduction,
    text=education2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_poverty_reduction	,
    text=age2.ed_debt_poverty_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_poverty_reduction,
    text=age2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_poverty_reduction,
    text=income2.ed_debt_poverty_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_poverty_reduction,
    text=income2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_poverty_reduction,
    text=networth2.ed_debt_poverty_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_poverty_reduction,
    text=networth2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_poverty_reduction,
    text=poor2.ubi_poverty_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_poverty_reduction,
    text=poor2.ed_debt_poverty_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Reduction in poverty rate by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty reduction&quot;,
        ticksuffix =&quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-105,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty reduction by age group',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f22() {
  var x = document.getElementById(&quot;asset_code_22&quot;);
  var b = document.getElementById(&quot;button22&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset22&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-22.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset22&quot;&gt;&lt;/div&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button23&quot; onclick=&quot;f23()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_23&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
## Percent in poverty by reform ##

fig = go.Figure()

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ed_debt_gap_reduction	,
    text=race2.ed_debt_gap_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE
))

fig.add_trace(go.Bar(
    x=race2.race,
    y=race2.ubi_gap_reduction,
    text= race2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ed_debt_gap_reduction	,
    text=education2.ed_debt_gap_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=education2.edcl,
    y=education2.ubi_gap_reduction,
    text=education2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ed_debt_gap_reduction,
    text=age2.ed_debt_gap_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=age2.agecl,
    y=age2.ubi_gap_reduction,
    text=age2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ed_debt_gap_reduction,
    text=income2.ed_debt_gap_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=income2.income_pp_quintile,
    y=income2.ubi_gap_reduction,
    text=income2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ed_debt_gap_reduction,
    text=networth2.ed_debt_gap_reduction,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=networth2.networth_pp_quintile2,
    y=networth2.ubi_gap_reduction,
    text=networth2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ed_debt_gap_reduction	,
    text=poor2.ed_debt_gap_reduction	,
    name='All student&lt;br /&gt;debt cancellation',
    marker_color=LIGHT_BLUE,
    visible = False
))

fig.add_trace(go.Bar(
    x=poor2.original_poor,
    y=poor2.ubi_gap_reduction,
    text=poor2.ubi_gap_reduction,
    name='Budget-equivalent&lt;br /&gt;universal payment',
    marker_color=DARK_BLUE,
    visible = False
))


fig.update_layout(uniformtext_minsize=10, uniformtext_mode='hide', plot_bgcolor='white')
fig.update_traces(texttemplate='%{text}%', textposition='outside')
fig.update_layout(title_text='Poverty gap reduction by race')

fig.update_xaxes(
        tickangle = 0,
        title_text = &quot;Demographic of head of household&quot;,
        tickfont = {&quot;size&quot;: 14},
        title_standoff = 25)

fig.update_yaxes(
        title_text = &quot;Poverty gap reduction&quot;,
        ticksuffix =&quot;%&quot;,
        tickprefix = &quot;&quot;,
        tickfont = {'size':14},
        title_standoff = 25,
        range=[-100,0])

fig.update_xaxes(title_font=dict(size=14, family='Roboto', color='black'))
fig.update_yaxes(title_font=dict(size=14, family='Roboto', color='black'))

fig.update_layout(barmode='group')

fig.update_layout(
    updatemenus=[go.layout.Updatemenu(
        active=0,
        buttons=list([
            dict(label=&quot;Race&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[True,True,False,False,False,False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by race',
                        'showlegend':True}]),
            
            dict(label=&quot;Education&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,True,True, False, False,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by education level',
                        'showlegend':True}]),
            
            dict(label=&quot;Age&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, True, True,False,False,False,False,False,False]},
                       {'title':'Poverty gap reduction by age level',
                        'showlegend':True}]),
            
            dict(label=&quot;Income&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False,False,False,False,False,False,True,True,False,False,False,False]},
                       {'title':'Poverty gap reduction by income quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Networth&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,True,True,False,False]},
                       {'title':'Poverty gap reduction by net worth quintile',
                        'showlegend':True}]),
            
            dict(label=&quot;Poverty Status&quot;,
                 method=&quot;update&quot;,
                 args=[{'visible':[False, False,False, False, False, False,False,False,False,False,True,True]},
                       {'title':'Poverty gap reduction by poverty status',
                        'showlegend':True}])
                        ]),
        
            direction=&quot;down&quot;,
            pad={&quot;r&quot;: 10, &quot;t&quot;: 10},
            showactive=True,
            x=-0.35,
            xanchor=&quot;left&quot;,
            y=1.1,
            yanchor=&quot;top&quot;
    
    )])

fig.show(config=config)
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f23() {
  var x = document.getElementById(&quot;asset_code_23&quot;);
  var b = document.getElementById(&quot;button23&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset23&quot;).load(&quot;/assets/markdown_assets/student-debt/2020-11-17-student-debt-asset-23.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset23&quot;&gt;&lt;/div&gt;
&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:debt&quot;&gt;
      &lt;p&gt;The Federal Reserve Bank of New York has &lt;a href=&quot;https://www.newyorkfed.org/microeconomics/hhdc.html&quot;&gt;estimated&lt;/a&gt; total student debt to be $1.54 trillion as of the second quarter of 2020. &lt;a href=&quot;#fnref:debt&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:hhdemo&quot;&gt;
      &lt;p&gt;Because the SCF collects data at the household level, all demographics are represented by the demographic of the head of household. &lt;a href=&quot;#fnref:hhdemo&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:quintiles&quot;&gt;
      &lt;p&gt;I assign households to income and net worth quintiles based on per-capita income and net worth, respectively, weighted by person such that each quintile has the same population. Inequality statistics are also based on per-capita income and net worth and weighted by person. &lt;a href=&quot;#fnref:quintiles&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:poverty&quot;&gt;
      &lt;p&gt;I classify a household as in poverty if its official &lt;a href=&quot;https://aspe.hhs.gov/2019-poverty-guidelines&quot;&gt;2019 poverty guideline&lt;/a&gt; (defined by Health and Human Services) exceeds its total income (including in-kind benefits like food assistance, and in this case, student loan forgiveness). &lt;a href=&quot;#fnref:poverty&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:static&quot;&gt;
      &lt;p&gt;Calculations around net debt and other outcomes assume that all cancelled debt and universal payments go directly to net worth; that is, consumption is assumed to be constant. &lt;a href=&quot;#fnref:static&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>Nate Golden</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="student debt" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">How a tax-funded UBI can improve the lives of Indigenous Americans</title>
      <link href="/indigenous" rel="alternate" type="text/html" title="How a tax-funded UBI can improve the lives of Indigenous Americans" />
      <published>2020-10-12T00:00:00+00:00</published>
      <updated>2020-10-12T00:00:00+00:00</updated>
      <id>/indigenous</id>
      <content type="html" xml:base="/indigenous">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;Indigenous People’s Day is a time to celebrate and honor Indigenous Americans, while also recognizing the history of discrimination, oppression, and genocide they have faced since Europeans arrived in the Americas more than 500 years ago.&lt;/p&gt;

&lt;p&gt;For centuries, American public policy has treated Indigenous Americans as second class citizens—enforcing migration, barring citizenship, and refusing to give them the fundamental rights granted to them by the Constitution. All of this produced large economic disparities that continue to this day.  Indigenous Americans are 35 percent more likely to be in poverty than non-Indigenous Americans, and their median income is a third lower.  While public policy has historically been used to marginalize Indigenous Americans, it can also be used as a tool to build them up. In this paper, I examine how a tax-funded Universal Basic Income (UBI) would impact Indigenous Americans.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;To conduct the simulation I used data from the Census Bureau’s Annual Social and Economic Supplement (ASEC), which reports on data from 2019.  For each simulation, a UBI is given to every American of all ages and funded by a flat tax on Adjusted Gross Income (AGI).  AGI includes labor and capital income, and subtracts specific deductions like half of the self-employment taxes and contributions to certain retirement accounts.  Unlike taxable income, AGI does not account for most itemized deductions or the standard deduction. I assume no labor supply responses to the new taxes or income.&lt;/p&gt;

&lt;p&gt;For each UBI amount ranging from $0 per month to $1,000 per month, I calculated the necessary tax rates (below; each $100 per month requires a 3.3 percent tax on AGI), and change in poverty rates and income distributions for both Indigenous and non-Indigenous Americans after taxes and the UBI.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Import Libraries
import numpy as np
import pandas as pd
import microdf as mdf
import plotly.express as px

# Import data
person = pd.read_csv('https://github.com/ngpsu22/indigenous-peoples-day/raw/main/cps_00021.csv.gz')

# Create Demographic Columns
person.columns = person.columns.str.lower()
person['child'] = person.age &amp;lt; 18
person['adult'] = person.age &amp;gt;= 18
person['native'] = person.race == 300
person['non_native'] = person.race != 300

# Calculate total AGI
person['adjginc'].replace({99999999: 0}, inplace=True)
population = person.asecwt.sum()
person['weighted_agi'] = person.adjginc * person.asecwt
total_agi = person.weighted_agi.sum()

# Calculate AGI tax rate per dollar of UBI
fed_tax_rate_per_dollar_ubi_monthly = (population * 12) / total_agi

# Create table showing tax amounts
tax_rates = pd.DataFrame(np.arange(0,1001, 50))
tax_rates.columns = ['monthly_ubi']

def tax(monthly_ubi):
    return (monthly_ubi * fed_tax_rate_per_dollar_ubi_monthly * 100).round(1)

def tax_row(row):
    return tax(row.monthly_ubi)

tax_rates['tax_rate'] = tax_rates.apply(tax_row, axis=1)
tax_rates.columns = ['monthly_ubi', 'tax_rate']

fig = px.line(tax_rates, x='monthly_ubi', y='tax_rate')
fig.update_layout(
    title='Tax rate on AGI needed to fund each UBI level',
    xaxis_title='Monthly UBI amount',
    yaxis_title='Required tax rate on adjusted gross income',
    yaxis_ticksuffix='%',
    font=dict(family='Roboto'),
    hovermode='x', 
    xaxis_tickprefix='$',
    xaxis_ticksuffix='',
    plot_bgcolor='white',
    legend_title_text=''
)
fig.update_traces(mode='markers+lines', hovertemplate=None)

fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/indigenous/2020-10-12-indigenous-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;The simulation shows that a tax-funded UBI has the potential to drastically reduce the poverty rate of Indigenous Americans. A UBI of $100 per month would drop Indigenous poverty below the current non-Indigenous poverty rate.  At $250 per month Indigenous poverty rates fall by more than half.  A larger UBI of $1,000 per month would drive Indigenous poverty to less than one percent.&lt;/p&gt;

&lt;p&gt;Beyond just reducing the overall poverty rate a UBI could shrink or eliminate the poverty gap between Indigenous and non-Indigenous Americans.  At all rates of $250 per month or higher, the gap closes within one percentage point.  At all rates of $600 per month or higher, Indigenous poverty is lower than non-Indigenous poverty.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
def ubi(race, monthly_ubi):
    &quot;&quot;&quot; Calculate the poverty rate, median resources, mean resources, and 
        percent of people better off for Indigenous and Non-Indigenous
        Americans at a given UBI level.
  
    Args:
        race: a person's race, for this simulation, either Indigenous or
            non-Indigenous.
        monthly_ubi: the monthly cash transfer given to each person.
  
    Returns:
        pd.Series with the following attributes:
        - The poverty rate for the selected group.
        - The median resources per person for the selected group.
        - The mean resources per person for the selected group.
        - The percent of people better off under the program for the selected
          group.
    &quot;&quot;&quot;    

  
    # Create a copy of the person DataFrame
    target_persons = person.copy(deep=True)
    
    # Calculate a person's tax increase
    target_persons['tax_increase'] = (
        fed_tax_rate_per_dollar_ubi_monthly * monthly_ubi * 
        target_persons.adjginc)
    
    # Calculate the total UBI per SPM unit.
    target_persons['total_ubi'] = (
        target_persons.spmnpers * 12 * monthly_ubi)
  
    # Calculate the total tax increase of an SPM unit
    spmu = target_persons.groupby(['spmfamunit'])[['tax_increase']].sum()
    spmu.columns = ['total_tax_increase']
    target_persons = target_persons.merge(spmu,left_on=['spmfamunit'],
                                          right_index=True)
    
    # Calculate each SPM unit's tax rate person
    target_persons['new_spm_resources'] = (target_persons.spmtotres
                                         + target_persons.total_ubi
                                         - target_persons.total_tax_increase)
    
    # Calculate the new resources per person of each SPM unit
    target_persons['new_resources_per_person'] = (
        target_persons.new_spm_resources / target_persons.spmnpers)
      
    # Slice the data based on Race input
    if race == 'native':
        target_persons = target_persons[target_persons.native]
    if race == 'non_native':
        target_persons = target_persons[target_persons.non_native] 
  
    # Calculate the change in poverty rate
    target_persons['poor'] = (target_persons.new_spm_resources 
                            &amp;lt; target_persons.spmthresh)
    total_poor = (target_persons.poor * target_persons.asecwt).sum()
    target_pop = target_persons.asecwt.sum()
    
    # Calculate percent better off
    target_persons['better_off'] = (target_persons.new_spm_resources &amp;gt; 
                                target_persons.spmtotres)
    total_better_off = (
        target_persons.better_off * target_persons.asecwt).sum()
    percent = total_better_off / target_pop * 100

    return pd.Series([
        mdf.weighted_median(target_persons, 'new_resources_per_person',
                            'asecwt').round(0), 
        mdf.weighted_mean(target_persons, 'new_resources_per_person',
                          'asecwt').round(0), 
        (total_poor / target_pop * 100).round(1), percent])

def ubi_row(row):  
    &quot;&quot;&quot; Runs the ubi_pov function across the rows of a DataFrame.
  
    Args:
        row: the row of the DataFrame containing a person's race and the
            monthly UBI amount
  
    Returns:
        pd.Series with the following elements:
        - The poverty rate for the selected row.
        - The median resources per person for the selected row.
        - The mean resources per person for the selected row.
        - The percent of people better off under the program for the selected
            row.
    &quot;&quot;&quot;  
    return ubi(row.race, row.monthly_ubi)

# Create a DataFrame that has each the each monthly UBI amount for each race
# input.
summary = mdf.cartesian_product({'monthly_ubi': np.arange(0, 1001, 50),
                       'race': ['native', 'non_native']})

# Calculate the poverty rate for each row of the summary DataFrame.
summary[['med_resources_per_person', 'mean_resources_per_person',
         'poverty_rate', 'better_off']] = summary.apply(ubi_row, axis=1)

# Format text.
center = {&quot;med_resources_per_person&quot;: &quot;Median resources&quot;,
          &quot;mean_resources_per_person&quot;: &quot;Mean resources&quot;}
race = {&quot;native&quot;: &quot;Indigenous&quot;,
        &quot;non_native&quot;: &quot;Non-Indigenous&quot;}

summary[&quot;race&quot;] =  summary.race.map(race)

COLOR_MAP = {'Indigenous': '#1976D2',  # Blue.
             'Non-Indigenous': '#BDBDBD'  # Gray.
            }


def line_graph(df, x, y, color, title, xaxis_title, yaxis_title):
    &quot;&quot;&quot;Style for line graphs.
    
    Args:
        df: DataFrame with data to be plotted.
        x: The string representing the column in df that holds the new
            spending in billions.
        y: The string representing the column in df that holds the poverty
            rate.
        color: The string representing the UBI type.
        xaxis_title: The string represnting the xaxis-title.
        yaxis_title: The string representing the yaxis-title.
    
    Returns:
        Nothing. Shows the plot.
    &quot;&quot;&quot;
    fig = px.line(df, x=x, y=y, color=color, color_discrete_map=COLOR_MAP)
    fig.update_layout(
        title=title,
        xaxis_title=xaxis_title,
        yaxis_title=yaxis_title,
        yaxis_ticksuffix='%',
        font=dict(family='Roboto'),
        hovermode='x', 
        xaxis_tickprefix='$',
        xaxis_ticksuffix='',
        plot_bgcolor='white',
        legend_title_text=''   
    )
    fig.update_traces(mode='markers+lines', hovertemplate=None)

    return fig

fig = line_graph(df=summary, x='monthly_ubi', 
           y='poverty_rate', color='race',
           title='The impact of a UBI on Indigenous and Non-Indigenous poverty',
           xaxis_title='Monthly UBI',
           yaxis_title='SPM poverty rate')
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/indigenous/2020-10-12-indigenous-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;A UBI funded by a flat tax would not just benefit those currently living in poverty; our simulation finds that 83 percent of Indigenous Americans would be better off under the program, regardless of the amount.&lt;/p&gt;

&lt;p&gt;Further, a UBI could reduce both the median and mean income gaps between Indigenous and non-Indigenous Americans.  A $500 per month UBI shrinks the gap in both median and mean resources by about a third.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
# Add commas
def comma(num):
    return num.astype(int).apply(&quot;{:,}&quot;.format)

summary[&quot;med_resources_per_person&quot;] = comma(summary.med_resources_per_person)
summary[&quot;mean_resources_per_person&quot;] = comma(summary.mean_resources_per_person)

# Create identifier columns
summary_long = pd.melt(summary,
                       id_vars=[&quot;monthly_ubi&quot;, &quot;race&quot;],
                       value_vars=['med_resources_per_person',
                                   'mean_resources_per_person'],
                       var_name=&quot;resource&quot;,
                       value_name=&quot;y&quot;)

summary_long[&quot;resource&quot;] = summary_long.resource.map(center)

# Plot
fig = px.bar(summary_long,
             x='resource',
             y=&quot;y&quot;,
             color=&quot;race&quot;,
             barmode='group',
             animation_frame='monthly_ubi',
             text='y',
             labels={&quot;race&quot;: &quot;Race&quot;,
                     &quot;monthly_ubi&quot;: &quot;Monthly UBI&quot;,
                     &quot;y&quot;: &quot;Resources per person&quot;,
                     &quot;resource&quot;: &quot;Metric&quot;
                    },
             color_discrete_map=COLOR_MAP,
             title=&quot;Tax-funded UBI and median/mean resources per person&quot;,
             range_y=[0, 32_000]
    )
fig.update_traces(texttemplate='$%{text}')
fig.update_layout(xaxis_title='',
                  yaxis_tickprefix='$',
                  uniformtext_minsize=9,
                  plot_bgcolor='white',
                  font=dict(family='Roboto'),
                  legend_title_text='')
fig.show(config={'displayModeBar': False})
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/indigenous/2020-10-12-indigenous-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Disparities between Indigenous and non-Indigenous Americans are not limited to income: inequities persist in &lt;a href=&quot;https://education.wsu.edu/documents/2015/08/native-american-achievement-gap-report.pdf/&quot;&gt;education&lt;/a&gt;, &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2567901/&quot;&gt;health outcomes&lt;/a&gt;, &lt;a href=&quot;https://www.bjs.gov/content/pub/pdf/aic.pdf&quot;&gt;incarceration rates&lt;/a&gt;, and &lt;a href=&quot;http://ssrc-static.s3.amazonaws.com/wp-content/uploads/2015/04/Geographies-of-Opportunity-4.22.2015.pdf&quot;&gt;life expectancy&lt;/a&gt;.  However, evidence suggests that cash transfers could help close these gaps as well.  One &lt;a href=&quot;https://www.aeaweb.org/articles?id=10.1257/app.2.1.86&quot;&gt;study&lt;/a&gt; followed a group of Cherokee Indian families that received unconditional cash transfers of approximately $4,000 annually as part of a profit sharing agreement from a local casino. When recipients of the dividend were compared to residents nearby that did not receive it, researchers found that an additional $4,000 per year for the poorest households increased educational attainment of children by one year by age 21, and reduced the chance of committing a minor crime by 22 percent for 16 and 17 year olds.  They also documented a decline in teenage pregnancy and substance abuse.  Other studies found cash transfers reduce &lt;a href=&quot;https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3380033&quot;&gt;child obesity&lt;/a&gt;, improve &lt;a href=&quot;http://eprints.lse.ac.uk/58059/1/__lse.ac.uk_storage_LIBRARY_Secondary_libfile_shared_repository_Content_STICERD_PEP%20discussion%20papers_pep01.pdf&quot;&gt;health outcomes&lt;/a&gt;, and increase &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5510957/&quot;&gt;life expectancy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In short, UBI is a policy tool that has already been successfully trialed in Indigenous communities, and which has the potential to radically change the life of the average Indigenous American for the better.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Nate Golden</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="indigenous americans" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">To minimize poverty, should UBI be provided for adults, children, or both?</title>
      <link href="/adult-child-ubi" rel="alternate" type="text/html" title="To minimize poverty, should UBI be provided for adults, children, or both?" />
      <published>2020-07-07T00:00:00+00:00</published>
      <updated>2020-07-07T00:00:00+00:00</updated>
      <id>/adult-child-ubi</id>
      <content type="html" xml:base="/adult-child-ubi">&lt;head&gt;
  &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
  &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;

&lt;p&gt;While &lt;a href=&quot;https://fred.stlouisfed.org/series/A939RX0Q048SBEA&quot;&gt;US GDP per capita has more than doubled in the past 50 years&lt;/a&gt;, many Americans still remain in poverty. According to the Census Bureau’s 2018 Supplemental Poverty Measure (SPM), over 40 million Americans live below their SPM poverty threshold.&lt;/p&gt;

&lt;p&gt;Some &lt;a href=&quot;https://www.ubicenter.org/plans&quot;&gt;large guaranteed-income programs have been shown to nearly eliminate poverty&lt;/a&gt;, but spending constraints can change how program design affects different outcomes. This paper shows the impact of new universal cash programs on poverty alleviation under varying levels of spending.&lt;/p&gt;

&lt;p&gt;I examine the poverty rate impacts of three different basic income programs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adult UBI - provides monthly stipends only to adults.&lt;/li&gt;
  &lt;li&gt;Child Allowance - provides families monthly stipends based only on how many children are in their household.&lt;/li&gt;
  &lt;li&gt;All UBI - provides an equal monthly stipend to all Americans regardless of age (parents would receive it on behalf of their children).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Two years ago, Matt Bruenig produced a similar  &lt;a href=&quot;https://www.peoplespolicyproject.org/2018/11/29/a-child-allowance-would-be-very-effective-at-poverty-reduction/&quot;&gt;paper&lt;/a&gt; using 2017 data in which he compared the same three programs and their impact on the poverty rate up to $500 billion in new spending. Bruenig found that at all levels of spending up to $500 billion, a Child Allowance was the most effective program at reducing poverty. This paper considers new spending up to $1 trillion with updated data from 2018.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;I used data from the Census Bureau’s 2019 Annual Social and Economic Supplement (ASEC), which uses data collected in 2018. The ASEC survey contains over 180,000 Americans from more than 75,000 households. Each respondent is assigned a sample weight by the Census Bureau so that models can provide consistent national-level estimates.&lt;/p&gt;

&lt;p&gt;The Supplemental Poverty Measure classifies respondents’ poverty status by comparing their total family income (post tax and transfers) to their family poverty threshold. The Census Bureau defines poverty thresholds based on family size and costs of necessities.&lt;/p&gt;

&lt;p&gt;In 2018, 12.7 percent of Americans were in poverty, including 13.6 percent of children and 12.5 percent of adults.&lt;/p&gt;

&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;

&lt;p&gt;A Child Allowance reduces overall poverty more than the other two designs, for spending up to $500 billion; this aligns with Bruenig’s results. However, at levels beyond $500 billion, a UBI that includes everyone cuts overall poverty more.&lt;/p&gt;

&lt;p&gt;Spending $100 billion on a Child Allowance would equate to monthly stipends of $114 per child and lift 4.5 million Americans (1.3 million children and 3.2 million adults) out of poverty. $500 billion on either a Child Allowance or All UBI would lift 12 million Americans out of poverty. Spending $1 trillion on an All UBI would equate to monthly checks of $258 per American and lift over 22 million people out of poverty.&lt;/p&gt;

&lt;p&gt;The interactive graph below shows the poverty impacts of each program at different funding levels.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button1&quot; onclick=&quot;f1()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_1&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
### LOAD PACKAGES ####

import pandas as pd
import numpy as np
import plotly.express as px
import plotly

### LOAD DATA ###

person_raw = pd.read_csv('https://github.com/MaxGhenis/datarepo/raw/master/pppub19.csv.gz',
                         usecols=['MARSUPWT', 'SPM_ID', 'SPM_POVTHRESHOLD',
                                  'SPM_RESOURCES', 'A_AGE'])

### PREPROCESS ###

person = person_raw.copy(deep=True)
person.columns = person.columns.str.lower()
person['weight'] = person.marsupwt/100
#Compute total children and adults in each resource sharing group.
person['child'] = person.a_age &amp;lt; 18
person['adult'] = person.a_age &amp;gt;= 18
spmu_ages = person.groupby('spm_id')[['child','adult']].sum()
spmu_ages.columns = ['children', 'total_adults']
person2 = person.merge(spmu_ages,left_on='spm_id', right_index=True)
total_children = (person2.child * person2.weight).sum()
total_adults = (person2.adult * person2.weight).sum()

### CALCULATIONS ###

child_allowance_overall = []
child_allowance_child = []
child_allowance_adults = []

# Determine the poverty rate impact of a Child Allownace from $0 in new spending to $1 trillion.

for spending in range(0, 1000000000001, 50000000000):
    child_allowance_per_child = spending/total_children
    total_child_allowance = person2.children * child_allowance_per_child
    new_spm_resources_ca = person2.spm_resources + total_child_allowance
    new_poor_ca = new_spm_resources_ca &amp;lt; person2.spm_povthreshold
    new_total_child_poor = ((person2.child * person2.weight * 
                             new_poor_ca).sum())
    new_child_poverty_rate = ((new_total_child_poor)/
                              (person2.child * person2.weight).sum())
    new_total_adult_poor = ((person2.adult * person2.weight * 
                             new_poor_ca).sum())
    new_adult_poverty_rate = ((new_total_adult_poor)/
                              (person2.adult * person2.weight).sum())
    new_total_poor_ca = (new_poor_ca * person2.weight).sum()
    new_poverty_rate_ca = new_total_poor_ca/person2.weight.sum()
    child_allowance_overall.append(new_poverty_rate_ca)
    child_allowance_child.append(new_child_poverty_rate)
    child_allowance_adults.append(new_adult_poverty_rate)
    
ubi_adults_overall = []
ubi_adults_child = []
ubi_adults_adults = []

# Determine the poverty rate impact of a Adult UBI from $0 in new spending to $1 trillion.

for spending in range(0, 1000000000001, 50000000000):
    adult_ubi = spending/total_adults
    total_adult_ubi = person2.total_adults * adult_ubi
    new_spm_resources_ubi = person2.spm_resources + total_adult_ubi
    new_poor_ubi = new_spm_resources_ubi &amp;lt; person2.spm_povthreshold
    new_total_child_poor = ((person2.child * person2.weight * 
                             new_poor_ubi).sum())
    new_child_poverty_rate = ((new_total_child_poor)/
                              (person2.child * person2.weight).sum())
    new_total_adult_poor = ((person2.adult * person2.weight * 
                             new_poor_ubi).sum())
    new_adult_poverty_rate = ((new_total_adult_poor)/
                              (person2.adult * person2.weight).sum())
    new_total_poor_ubi = (new_poor_ubi * person2.weight).sum()
    new_poverty_rate_ubi = new_total_poor_ubi/person2.weight.sum()
    ubi_adults_overall.append(new_poverty_rate_ubi)
    ubi_adults_child.append(new_child_poverty_rate)
    ubi_adults_adults.append(new_adult_poverty_rate)
    
ubi_all_overall = []
ubi_all_child = []
ubi_all_adults = []

# Determine the poverty rate impact of a All UBI from $0 in new spending to $1 trillion.

for spending in range(0, 1000000000001, 50000000000):
    all_ubi_per_person = spending/(total_adults + total_children)
    total_all_ubi = ((person2.children * all_ubi_per_person) + 
                    (person2.total_adults * all_ubi_per_person))
    new_spm_resources_all_ubi = person2.spm_resources + total_all_ubi
    new_poor_all_ubi = new_spm_resources_all_ubi &amp;lt; person2.spm_povthreshold
    new_total_child_poor = ((person2.child * person2.weight * 
                             new_poor_all_ubi).sum())
    new_child_poverty_rate = ((new_total_child_poor)/
                              (person2.child * person2.weight).sum())
    new_total_adult_poor = ((person2.adult * person2.weight * 
                             new_poor_all_ubi).sum())
    new_adult_poverty_rate = ((new_total_adult_poor)/
                              (person2.adult * person2.weight).sum())
    new_total_poor_all_ubi = (new_poor_all_ubi * person2.weight).sum()
    new_poverty_rate_all_ubi = new_total_poor_all_ubi/person2.weight.sum()
    ubi_all_overall.append(new_poverty_rate_all_ubi)
    ubi_all_child.append(new_child_poverty_rate)
    ubi_all_adults.append(new_adult_poverty_rate)
    
spending_data = []
for spending in range(0, 1001, 50):
    spending = spending/100
    spending_data.append(spending)
    
### ANALYSIS ###

# Create a DataFrame grouped by each plans impact on the overall poverty rate. 
overall = {'spending_in_billions': spending_data,
                       'child_allowance': child_allowance_overall,
                       'adult_ubi': ubi_adults_overall,
                       'all_ubi': ubi_all_overall}
                    
overall_df = pd.DataFrame(overall)
overall_df = pd.DataFrame(overall_df).round(3)

# Create a DataFrame grouped by each plans impact on the child poverty rate.
child = {'spending_in_billions': spending_data,
         'child_allowance': child_allowance_child,
         'adult_ubi': ubi_adults_child,
         'all_ubi': ubi_all_child}
                    
child_df = pd.DataFrame(child)
child_df = pd.DataFrame(child_df).round(3)


# Create a DataFrame grouped by each plans impact on the adult poverty rate.
adult = {'spending_in_billions': spending_data,
         'child_allowance': child_allowance_adults,
         'adult_ubi': ubi_adults_adults,
         'all_ubi': ubi_all_adults}
                    
adult_df = pd.DataFrame(adult)
adult_df = pd.DataFrame(adult_df).round(3)


# Join different programs together for plotly.
program = (pd.melt(overall_df, 'spending_in_billions', 
                   var_name='ubi_type',value_name='poverty_rate'))

def melt_dict(d):
  &quot;&quot;&quot; produce long version of data frame represented by dictionary (d).
  
  Arguments
  d: Dictionary where each element represents a differnt UBI type and spending levels and the poverty impacts.
  
  Returns
  DataFrame where every row is the combination of UBI type and spending level.
  &quot;&quot;&quot;
  df = pd.DataFrame(d).round(3) * 100
  program = pd.melt(df, 'spending_in_billions', var_name='ubi_type',value_name='poverty_rate')
  program['ubi_type'] = program.ubi_type.map({'child_allowance': 'Child allowance',
                                      'adult_ubi': 'Adult UBI',
                                      'all_ubi': 'All UBI'})
  return program

program_overall = melt_dict(overall)
program_child = melt_dict(child)
program_adult = melt_dict(adult)

def line_graph(df, x, y, color, title, xaxis_title, yaxis_title):
    &quot;&quot;&quot;Style for line graphs.
    
    Arguments
    df: DataFrame with data to be plotted.
    x: The string representing the column in df that holds the new spending in billions.
    y: The string representing the column in df that holds the poverty rate.
    color: The string representing the UBI type.
    xaxis_title: The string represnting the xaxis-title.
    yaxis_title: The string representing the yaxis-title.
    
    Returns
    Nothing. Shows the plot.
    &quot;&quot;&quot;
    fig = px.line(df, x=x, y=y, color=color)
    fig.update_layout(
        title=title,
        xaxis_title=xaxis_title,
        yaxis_title=yaxis_title,
        yaxis_ticksuffix='%',
        font=dict(family='Roboto'),
        hovermode='x',
        xaxis_tickprefix='$',
        xaxis_ticksuffix='B',
        plot_bgcolor='white',
        legend_title_text=''
        
    )

    fig.update_traces(mode='markers+lines', hovertemplate=None)

    return fig

fig = line_graph(df=program_overall, x='spending_in_billions', 
           y='poverty_rate', color='ubi_type',
           title='Overall poverty rate and spending on cash transfer programs',
           xaxis_title='Spending in billions',
           yaxis_title='SPM poverty rate')

fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f1() {
  var x = document.getElementById(&quot;asset_code_1&quot;);
  var b = document.getElementById(&quot;button1&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset1&quot;).load(&quot;/assets/markdown_assets/adult_child_ubi/2020-07-07-adult-child-ubi-asset-1.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset1&quot;&gt;&lt;/div&gt;

&lt;p&gt;Unsurprisingly, a Child Allowance was the most effective program at reducing child poverty at all levels of spending. Spending $400 billion on a Child Allowance cuts child poverty by over two-thirds, from 13.6 percent to 4.3 percent.&lt;/p&gt;

&lt;p&gt;Comparatively, spending $1 trillion on an Adult UBI leaves 7 percent of children still in poverty. For an All UBI and a Child Allowance under the same spending, 4 percent and 1 percent of children would remain in poverty, respectively.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button2&quot; onclick=&quot;f2()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_2&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = line_graph(df=program_child, x='spending_in_billions', 
           y='poverty_rate', color='ubi_type',
           title='Child poverty rate and spending on cash transfer programs',
           xaxis_title='Spending in billions',
           yaxis_title='SPM poverty rate among people aged 17 and under')
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f2() {
  var x = document.getElementById(&quot;asset_code_2&quot;);
  var b = document.getElementById(&quot;button2&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset2&quot;).load(&quot;/assets/markdown_assets/adult_child_ubi/2020-07-07-adult-child-ubi-asset-2.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset2&quot;&gt;&lt;/div&gt;

&lt;p&gt;An Adult UBI and an All UBI have nearly identical effects on the adult poverty rate. A Child Allowance has a smaller impact on adult poverty because the benefits only go to adults with children in their family.&lt;/p&gt;

&lt;p&gt;&lt;button class=&quot;code-button&quot; id=&quot;button3&quot; onclick=&quot;f3()&quot;&gt;▶ Click to show code&lt;/button&gt;&lt;/p&gt;
&lt;div class=&quot;code-cell&quot; id=&quot;asset_code_3&quot; style=&quot;display: none;&quot;&gt;
  &lt;pre&gt;
    &lt;code&gt;
fig = line_graph(df=program_adult, x='spending_in_billions', 
           y='poverty_rate', color='ubi_type',
           title='Adult poverty rate and spending on cash transfer programs',
           xaxis_title='Spending in billions',
           yaxis_title='SPM poverty rate among people aged 18 and over')
fig.show()
    &lt;/code&gt;
  &lt;/pre&gt;
&lt;/div&gt;

&lt;script&gt;
function f3() {
  var x = document.getElementById(&quot;asset_code_3&quot;);
  var b = document.getElementById(&quot;button3&quot;);
  if (x.style.display === &quot;none&quot;) {
    x.style.display = &quot;block&quot;;
    b.innerHTML = &quot;&amp;#9660 Click to hide code&quot;;
  } else {
    x.style.display = &quot;none&quot;;
    b.innerHTML = &quot;&amp;#9654 Click to show code&quot;;
  }
}
&lt;/script&gt;

&lt;div&gt;
  &lt;script&gt;
    $(document).ready(function(){
      $(&quot;#asset3&quot;).load(&quot;/assets/markdown_assets/adult_child_ubi/2020-07-07-adult-child-ubi-asset-3.html&quot;);
    });
  &lt;/script&gt;
&lt;/div&gt;
&lt;div id=&quot;asset3&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This analysis finds that (a) including children in basic income plans enhances their anti-poverty effects and (b) optimal policy depends on spending levels.&lt;/p&gt;

&lt;p&gt;Given limited political support for added spending, a Child Allowance alleviates poverty most effectively. If the political appetite for anti-poverty spending is more substantial, we should aim to provide a truly universal UBI and provide cash transfers to everyone.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Nate Golden</name>
        
        
      </author>

      

      
        <category term="us" />
      
        <category term="child allowance" />
      
        <category term="poverty" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
